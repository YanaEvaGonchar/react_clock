{"version":3,"sources":["components/clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","time","Date","getTime","date","toUTCString","slice","this","window","setInterval","setState","console","info","prevProps","oldName","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,QAAU,EADZ,EAGEC,MAAyB,CACvBC,KAAM,IAAIC,MAJd,EA4BEC,QAAU,SAACC,GAAD,OAAgBA,EAAKC,cAAcC,OAAO,IAAK,IA5B3D,uDAOE,WAAqB,IAAD,OAClBC,KAAKR,QAAUS,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAET,KAAM,IAAIC,OAE1BM,OAAOG,QAAQC,KAAK,EAAKT,QAAQ,EAAKH,MAAMC,SAC3C,OAZP,gCAeE,SAAmBY,GACjB,IAAcC,EAAYD,EAAlBE,KACAA,EAASR,KAAKS,MAAdD,KAEJD,IAAYC,GACdP,OAAOG,QAAQM,MAAf,uBAAqCH,EAArC,eAAmDC,MApBzD,kCAwBE,WACEP,OAAOU,cAAcX,KAAKR,WAzB9B,oBA8BE,WACE,IAAQgB,EAASR,KAAKS,MAAdD,KACAd,EAASM,KAAKP,MAAdC,KAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGZ,KAAKJ,QAAQF,YA3CxB,GAA2BmB,a,MCL3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAQX,IAAMG,EAAb,4MACEzB,MAAwB,CACtB0B,UAAW,UACXC,UAAU,GAHd,EAME5B,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClB6B,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEiB,UAAU,OAG5BpB,KAAKR,QAAUS,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEgB,UAAWL,QAC1B,QApBP,kCAuBE,WACEb,OAAOU,cAAcX,KAAKR,WAxB9B,oBA2BE,WACE,MAAgCQ,KAAKP,MAA7B0B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBAEEQ,GAAY,cAAC,EAAD,CAAOZ,KAAMW,WAlCnC,GAAyBN,aCbzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.b717c3b6.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  timerId = 0;\n\n  state: Readonly<State> = {\n    time: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n\n      window.console.info(this.getTime(this.state.time));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name: oldName } = prevProps;\n    const { name } = this.props;\n\n    if (oldName !== name) {\n      window.console.debug(`Renamed from ${oldName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  getTime = (date: Date) => date.toUTCString().slice(-12, -4);\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.getTime(time)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state:Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n\n        { hasClock && <Clock name={clockName} /> }\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}